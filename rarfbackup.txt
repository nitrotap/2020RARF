# Title     : 2020 RARF Data
# Objective : Identify appropriate model for Pesticide Treatment
# Created by: Kartik Jevaji
# Created on: 7/24/2021
# Prepared for Lillian McGilp


# rep is 1-4 for each treatment type # assuming this is over time (rep 4 is later than rep 1)
# treatment is Agrimek, azera, blackhawk, control, coragen, mustang.maxx
# head 1-25 must be primary key id for each treatment and rep
# dseed is count of damaged seeds
install.packages("afex")
install.packages("lme4")

library("lme4")

rarf <- read.table("RARF 2020 R.txt", header=T)
attach(rarf)
summary(rarf)

hist(Dseed) # over 500 zero to just a couple of 5's no 4's
sd(Dseed)
sum(!is.na(Dseed)) # count is 600
# three values of 5 - 2 Azera, 1 Control
# zero values of 4
# four values of 3
# 16 values of 2
# 62 values of 1
# 516 values of 0
# the question: does treatment affect DSeed
# which rep has the highest seed damage?


# factor Treatment
TreatmentLevels <- c("AgriMek", "Azera", "Blackhawk", "Control", "Coragen", "Mustang.Maxx")
Treatment <- factor(rarf$Treatment, TreatmentLevels)
summary(Treatment)

# factor Damage
rm(Damaged)
Damagedunfactored <- factor(ifelse(rarf$Dseed > 0, "YES", "NO"))
factorlevels <- gl(2, 1, labels = c("YES", "NO"))
Damaged <- factor(Damagedunfactored, factorlevels)
summary(Damaged)

# factor Rep
repLevels <- c("1", "2", "3", "4")
repFactor <- factor(rarf$Rep, repLevels)
summary(repFactor)

#factor Head
headLevels <- c("1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18",
                "19", "20", "21", "22", "23", "24", "25")
headFactor <- factor(rarf$Head, headLevels)
summary(headFactor)

# working tests

# kruskal-wallis non parametric tests
# A collection of data samples are independent if they come from unrelated populations
# and the samples do not affect each other.
# Using the Kruskal-Wallis Test, we can decide whether the population distributions are identical without
# assuming them to follow the normal distribution.
kruskal.test(Treatment ~ Damaged) # Kruskal-Wallis chi-squared = 22.661, df = 1, p-value = 1.932e-06
kruskal.test(repFactor ~ Damaged) # Kruskal-Wallis chi-squared = 0.1341, df = 1, p-value = 0.7142
kruskal.test(headFactor ~ Damaged) # Kruskal-Wallis chi-squared = 4.379, df = 1, p-value = 0.03638

# Logistic Regression Models (Smaller AIC is better)
# issues: headFactor and repFactor are not independent, need random effects model
glmframe <- data.frame(Damaged, Treatment, repFactor, headFactor)
summary(glm(Damaged ~ Treatment+headFactor+repFactor, binomial)) # Assumptions NOT met, Coragen and Mustang.Maxx are significant
summary(glm(Damaged ~ Treatment, binomial)) # Coragen and Mustang.Maxx are significant
summary(glm(Damaged ~ Treatment+headFactor, binomial, data = glmframe)) ## Assumptions MET. Coragen and Mustang.Maxx are significant
suggestedModel <- glm(Damaged ~ Treatment+headFactor, binomial, data = glmframe)
summary(suggestedModel)


# Generalized Linear Models, fixed effect TreatmentFactor, random effects: repFactor nested headFactor
## reponse ~ treatment + (1|a/b)
glmframe <- data.frame(Damaged, Treatment, repFactor, headFactor)
glm4 <- glmer(Damaged ~ 1 + Treatment + (1|repFactor/headFactor), binomial, data = glmframe) # random intercept with fixed mean
summary(glm4)
glm5 <- glmer(Damaged ~ Treatment + (Treatment|repFactor/headFactor), binomial, data = glmframe) # correlated random intercept with slope
summary(glm5)
glm6 <- glmer(Damaged ~ Treatment + (Treatment||repFactor/headFactor), binomial, data = glmframe) # uncorrelated random intercept with slope
summary(glm6)
glm7<- glmer(Damaged ~ Treatment + (1|repFactor/headFactor), binomial, data = glmframe) # (i think) random intercept with fixed mean
summary(glm7)
##with low levels repFactor = 5 causing singular fit, I drop repFactor from a random effect to a fixed effect
glm8 <- glmer(Damaged ~ Treatment + repFactor + (1|headFactor), binomial, data = glmframe)
summary(glm8)
glm9 <- glmer(Damaged ~ Treatment + (Treatment||headFactor) + repFactor, binomial, data = glmframe)
summary(glm9)
glm10 <- glmer(Damaged ~ Treatment + repFactor + (1|headFactor), binomial, data = glmframe)
summary(glm10)
glm11 <- glmer(Damaged ~ Treatment + (Treatment||repFactor), binomial, data = glmframe)
summary(glm11)
anova( glm4, glm5, glm6, glm7, glm8, glm9, glm10, glm11)

# **** glm5 / glm6 models are best ****



# NOT important - EXTRA work
summary(glm(Damaged ~ headFactor, binomial)) # not significant
summary(glm(Damaged ~ repFactor, binomial)) # not significant
summary(glm(Damaged ~ Treatment + repFactor + headFactor, quasibinomial)) # mostly same as binomial
glm1 <- glmer(Damaged ~ 1 + Treatment + (1|repFactor:headFactor), data = glmframe, binomial)
summary(glm1)
glm2 <- glmer(Damaged ~ 1 + Treatment + (1|repFactor) + (1|headFactor), binomial, data = glmframe)
summary(glm2)
glm3 <- glmer(Damaged ~ Treatment + (1|repFactor/headFactor), binomial, data = glmframe) # nested level effect
summary(glm3)


# todo compare independent treatments to control
## compare proportions of Control and Treatments
# does the proportion of Damaged seeds with AgriMek different from Control?


rm(control)
Control <- subset(rarf2, rarf2$Treatment == 'Control')
summary(Control) # n = 100, p(damaged) = 18/100

Agrimek <- subset(rarf2, rarf2$Treatment == "AgriMek")
summary(Agrimek) # n = 100, p(damaged) = 19/100

Azera <- subset(rarf2, rarf2$Treatment == "Azera")
summary(Azera) # p(damaged) = 28

Blackhawk <- subset(rarf2, rarf2$Treatment == "Blackhawk")
summary(Blackhawk) # pdamaged = 12

Coragen <- subset(rarf2, rarf2$Treatment == "Coragen")
summary(Coragen) #pdamaged = 3

Mustang <- subset(rarf2, rarf2$Treatment == "Mustang.Maxx")
summary(Mustang) # pdamaged = 5



# todo friedman.test()
# not an unreplicated block design

## i'm assuming this is what she meant with poisson. quasipoisson?
summary(glm(formula = Dseed ~ Treatment+Rep+Head, data = rarf, family = poisson)) # AIC 634.37 - higher than df, bad fit
summary(glm(formula = Dseed ~ Treatment+Rep+Head, data = rarf, family = quasipoisson))
















detach(rarf)

# citations
# http://www.r-tutor.com/elementary-statistics/non-parametric-methods/kruskal-wallis-test
# https://stats.stackexchange.com/questions/79360/mixed-effects-model-with-nesting/79392
# https://stats.stackexchange.com/questions/197977/analyzing-nested-categorical-data
# https://www.jstatsoft.org/article/view/v067i01/v67i01.pdf Fitting Linear Mixed-Effects Models using lme4
# http://bbolker.github.io/mixedmodels-misc/glmmFAQ.html#should-i-treat-factor-xxx-as-fixed-or-random
# Whether you explicitly specify a random effect as nested or not depends (in part) on the way the levels of the random effects are coded.
# If the ‘lower-level’ random effect is coded with unique levels, then the two syntaxes (1|a/b) (or (1|a)+(1|a:b)) and (1|a)+(1|b) are equivalent.
# If the lower-level random effect has the same labels within each larger group (e.g. blocks 1, 2, 3, 4 within sites A, B, and C) then the explicit nesting (1|a/b) is required.
# It seems to be considered best practice to code the nested level uniquely (e.g. A1, A2, …, B1, B2, …) so that confusion between nested and crossed effects is less likely.

# https://stats.idre.ucla.edu/r/dae/mixed-effects-logistic-regression/
# https://rpsychologist.com/r-guide-longitudinal-lme-lmer


# FUTURE IDEAS
#https://stats.idre.ucla.edu/r/dae/multinomial-logistic-regression/
# https://cran.r-project.org/web/packages/nnet/nnet.pdf multinomial regression
# https://cran.r-project.org/web/packages/blme/blme.pdf bayesnian Generalized Linear Mixed Effects models
# https://stats.stackexchange.com/questions/132677/binomial-glmm-with-a-categorical-variable-with-full-successes Bayesnian
# https://stats.stackexchange.com/questions/391180/specifying-and-interpreting-mixed-effects-logistic-regression/391233#391233



